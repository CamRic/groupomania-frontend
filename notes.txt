
! secret
(historic)

! donees renvoyees securité
! wcag + owasp

! repos commun
! TEST CLONE :

! PLAN PRESENTATION
! doc api
! README.MD



=> PLAN (30sec)

=> presentation du projet et ds outils utilisés (1min)
  - MVP du réseau social groupomania permettant aux employés d'échanger
  - outils utilisés:
    * frontend: vuejs (spa), quasar (framework), axios (appels api), pinia (store)
    * backend: node + express (création du server), bcrypt (hash), jwt, sequelize (requete + models bdd), multer (images),

=> presentation de l'application (8min)
  - création de compte (avec erreur),
  - connexion (avec erreur)
  - demo session persistente
  - ajout d'un post sur topic existant, modification, suppression
  - création d'un topic, modification, suppression,
  - modification donnees utilisateur,
  - suppression du compte
  - connexion compte admin
  - fonctionnalités admin (page topic + page admin)
  - 404
  - responsive
  - deconnexion

=> presentation du code source (8min)
  - backend:
    * architecture
    * app.js + server.js
    * models
    * routes
    * middleware
    * controllers
  - frontend
    * architecture
    * dossier source
    * app.vue
    * dossier boot
    * dossier pages
    * dossier layouts
    * dossier components
    * stores

=> presentation de la base de donnees (1min)
  - show tables
  - describe



  ## Installation BDD ##

  Connectez-vous en tant que root à mysql à partir d'un terminal, puis:
    - pour creer la base de donnée:
      $ CREATE DATABASE groupomania;
      $ USE groupomania;
    - pour creer l'utilisateur:
      $ CREATE USER 'groupomania'@'localhost' IDENTIFIED BY 'r1gGsos1m9VWf0KJ';
      $ GRANT ALL PRIVILEGES ON groupomania.* TO 'groupomania'@'localhost';
    - pour creer les tables:
      $ CREATE TABLE users(
          user_id CHAR(36) UNIQUE KEY,
          email VARCHAR(254) NOT NULL PRIMARY KEY,
          password CHAR(60),
          first_name VARCHAR(50),
          last_name VARCHAR(50),
          access_level ENUM('admin', 'user'),
          topics JSON,
          posts JSON,
          favorites JSON,
          createdAt DATETIME,
          updatedAt DATETIME
      );
      $ CREATE TABLE topics(
          topic_id CHAR(36) UNIQUE KEY,
          user_id CHAR(36),
          title VARCHAR(255),
          body TEXT,
          imageUrl VARCHAR(255),
          replies JSON,
          createdAt DATETIME,
          updatedAt DATETIME
      );
      $ CREATE TABLE posts(
          post_id CHAR(36) UNIQUE KEY,
          topic_id CHAR(36),
          user_id CHAR(36),
          body TEXT,
          createdAt DATETIME,
          updatedAt DATETIME
      );
